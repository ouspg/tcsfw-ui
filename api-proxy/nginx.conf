events {
    worker_connections  1024;
}

http {
    # resolve DNS names inside container network
    resolver 127.0.0.11 valid=60s;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # API port from X-Api-Proxy header, if present
    map $http_x_api_proxy $backend_port {
        "~^(1\d\d\d\d)$" $1;  # port between 10000-19999
        default 8180;         # default port if no header or bad value
    }

    # What would be this role? How to set it, if ws port is dynamic?
    # upstream websocket {
    #     server $SERVER:8180;
    # }
 
    server {
        listen 8181;

        # accept fairly large payloads
        client_max_body_size 1G;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        # authentication and session token generation
        location /login {
            proxy_pass http://$SERVER:8180;

            auth_basic             "Restricted";
            auth_basic_user_file   .htpasswd;
            # add header to pass the authenticated username
            proxy_set_header X-User $remote_user;
        }

        location /api1/ws {
            proxy_pass http://$SERVER:$backend_port;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location /api1 {
            proxy_pass http://$SERVER:$backend_port;
        }

        # Dynamically redirect to differnet API ports
        # - default WS socket in JS does not allow custom headers
        # - also forcing port range to 10000-19999

        location ~* "^/proxy/ws/(1\d\d\d\d)/(.*)$" {
            proxy_pass http://$SERVER:$1/$2$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location ~* "^/proxy/(1\d\d\d\d)/(.*)$" {
            proxy_pass http://$SERVER:$1/$2$is_args$args;
        }

    }
}
